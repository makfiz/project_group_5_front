{"version":3,"file":"static/js/781.8f68aad5.chunk.js","mappings":"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","sources":["components/Button/Button.js","components/ModalTitle/ModalTitle.styled.js","components/ModalTitle/ModalTitle.js","utils/registerValidationSchema.js","components/RegistrationForm/RegistrationForm.styled.js","components/RegistrationForm/RegistrationForm.js","pages/RegisterPage/RegisterPage.jsx","pages/RegisterPage/RegisterPage.styled.js"],"sourcesContent":["export const Button = ({\n  type = 'button',\n  children,\n  style: StyledButton,\n  onClick,\n}) => {\n  return (\n    <StyledButton type={type} onClick={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n","import styled from 'styled-components';\n\nexport const StyledTytle = styled.p`\n  margin-bottom: 40px;\n\n  font-weight: ${p => p.theme.fontWeight.bold};\n  font-size: ${p => p.theme.fontSizes.l};\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.regModalTitleColor};\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-weight: ${p => p.theme.fontWeight.medium};\n    font-size: ${p => p.theme.fontSizes.ls};\n  }\n`;\n","import { StyledTytle } from './ModalTitle.styled';\n\nexport const ModalTitle = ({ children }) => {\n  return (\n    <>\n      <StyledTytle>{children}</StyledTytle>\n    </>\n  );\n};\n","import * as yup from 'yup';\n\nyup.addMethod(yup.string, 'numeric', function () {\n  return this.matches(/^\\d+$/, 'The number should have digits only');\n});\n\nyup.addMethod(yup.string, 'leters', function () {\n  return this.matches(\n    /^([A-Za-z][A-Za-z\\-\\']{1,50})|([А-ЯЁIЇҐЄа-яёіїґє][А-ЯЁIЇҐЄа-яёіїґє\\-\\']{1,50})$/,\n    'The name should have  only alphabets'\n  );\n});\n\nyup.addMethod(yup.string, 'mail', function () {\n  return this.matches(\n    /^[a-z0-9!#$%&'+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'+/=?^_`{|}~-]+)@(?:[a-z0-9](?:[a-z0-9-][a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/,\n    'The email address is incorect'\n  );\n});\n\nexport const schema = yup.object().shape({\n  email: yup.string().mail().required('Please enter your email!'),\n  password: yup.string().min('7').required('Please enter your password!'),\n\n  confirmPassword: yup\n    .string()\n    .label('confirm password')\n    .required()\n    .oneOf([yup.ref('password'), null], 'Passwords must match'),\n  name: yup\n    .string()\n    .min('2')\n    .max('16')\n    .leters()\n    .required('Please enter your name!'),\n  city: yup\n    .string()\n    .min('3')\n    .max('40')\n    .leters()\n    .required('Please enter city and region!'),\n\n  mobilePhone: yup\n    .string()\n    .min('3')\n    .numeric()\n    .required('Please enter your number!'),\n});\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  Form as FormicForm,\n  Field,\n  ErrorMessage as ErrorFormicError,\n} from 'formik';\nimport { FaEye } from 'react-icons/fa';\nimport { FaEyeSlash } from 'react-icons/fa';\n\nexport const Wraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  background-color: ${p => p.theme.colors.transparent};\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding-top: 60px;\n    padding-bottom: 60px;\n\n    background-color: ${p => p.theme.colors.regModBack};\n    box-shadow: ${p => p.theme.shadows.regModalShadow};\n    border-radius: ${p => p.theme.radii.large};\n  }\n  @media screen and (min-width: 1280px) {\n    width: 618px;\n  }\n`;\n\nexport const ButtonWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  margin-top: 28px;\n`;\n\nexport const NextButtonWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  margin-top: 40px;\n`;\n\nexport const LinkWraper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const LinkText = styled.p`\n  margin-right: 6px;\n  font-family: 'Manrope';\n  font-size: ${p => p.theme.fontSizes.xs};\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.regModalLinkText};\n`;\n\nexport const NavLink = styled(Link)`\n  font-family: 'Manrope';\n  font-size: ${p => p.theme.fontSizes.xs};\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.regModalLink};\n`;\n\nexport const StyledButton = styled.button`\n  width: 280px;\n  height: 44px;\n\n  background-color: ${p => p.theme.colors.regModalActiveBtn};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.large};\n  border: none;\n  cursor: pointer;\n\n  font-weight: ${p => p.theme.fontWeight.medium};\n  font-size: 20px;\n\n  @media screen and (min-width: 768px) {\n    width: 448px;\n  }\n\n  &:hover {\n    border: 2px solid #f59256;\n    background-color: transparent;\n    color: ${p => p.theme.colors.black};\n  }\n  &:active {\n    border: 2px solid #f59256;\n    background-color: transparent;\n    color: ${p => p.theme.colors.black};\n  }\n  :not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const StyledNextButton = styled.button`\n  width: 280px;\n  height: 44px;\n\n  background-color: ${p => p.theme.colors.regModalActiveBtn};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.large};\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 448px;\n  }\n  &:hover {\n    border: 2px solid #f59256;\n    background-color: transparent;\n    color: ${p => p.theme.colors.black};\n  }\n  &:active {\n    border: 2px solid #f59256;\n    background-color: transparent;\n    color: ${p => p.theme.colors.black};\n  }\n`;\n\nexport const Form = styled(FormicForm)`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  background-color: ${p => p.theme.colors.transparent};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: ${p => p.theme.radii.large};\n  padding-top: 11px;\n  padding-bottom: 11px;\n  padding-left: 14px;\n\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    background-color: #fdf7f2;\n    padding-left: 32px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n\n  :not(:last-child) {\n    margin-bottom: 16px;\n  }\n  ::placeholder {\n    color: ${p => p.theme.colors.regModalplaceholderColor};\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n`;\n\nexport const ErrorMessage = styled(ErrorFormicError)`\n  color: ${p => p.theme.colors.error};\n  margin-bottom: ${p => p.theme.space[4]}px;\n  margin-left: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n\n  @media screen and (min-width: 768px) {\n    margin-left: ${p => p.theme.space[5]}px;\n  }\n`;\n\nexport const ShowIcon = styled(FaEye)`\n  color: ${p => p.theme.colors.regModalActiveBtn};\n  size: 2em;\n`;\n\nexport const HideIcon = styled(FaEyeSlash)``;\n\nexport const InputPasswordWraper = styled.div`\n  position: relative;\n`;\n\nexport const IconWraper = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 11px;\n\n  @media screen and (min-width: 768px) {\n    top: 14px;\n  }\n`;\n","import { useState } from 'react';\nimport { Formik } from 'formik';\nimport { Navigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/operations';\n\nimport { ModalTitle } from 'components/ModalTitle/ModalTitle';\nimport { Button } from 'components/Button/Button';\nimport { schema } from 'utils/registerValidationSchema';\n\nimport {\n  Wraper,\n  LinkText,\n  NavLink,\n  StyledButton,\n  StyledNextButton,\n  Form,\n  Input,\n  ButtonWraper,\n  NextButtonWraper,\n  LinkWraper,\n  ErrorMessage,\n  InputPasswordWraper,\n  IconWraper,\n  ShowIcon,\n  HideIcon,\n} from './RegistrationForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n  confirmPassword: '',\n  name: '',\n  city: '',\n  mobilePhone: '',\n};\n\nexport const RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const [onNext, setOnNext] = useState(false);\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmePassword, setShowConfirmePassword] = useState(false);\n\n  const [inputType, setInputType] = useState(true);\n  const [inputConfirmeType, setInputConfirmeType] = useState(true);\n  const [sendEmail, setSendEmail] = useState(false);\n\n  const handleNextClick = () => {\n    setOnNext(true);\n  };\n\n  const handleBackClick = () => {\n    setOnNext(false);\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (values === '') {\n      return;\n    }\n\n    console.log(values);\n    // const { email, password } = values;\n    const { email, password, name, city, mobilePhone } = values\n    const phone = toString(mobilePhone);\n    console.log({ email, password, name, city, phone });\n    dispatch(authOperations.registration({ email, password, name, city,  phone }));\n    dispatch(sendingEmail());\n    dispatch(hideForm());\n\n    resetForm();\n    setSendEmail(true);\n  };\n\n  const onShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n    setInputType(prevState => !prevState);\n  };\n\n  const onShowConfirmePassword = () => {\n    setShowConfirmePassword(prevState => !prevState);\n    setInputConfirmeType(prevState => !prevState);\n  };\n\n  const onRegister = () => {};\n\n  return (\n    <>\n      <Wraper>\n        <ModalTitle children=\"Registration\" />\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n        >\n          <Form>\n            {!onNext ? (\n              <>\n                <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n                <ErrorMessage component=\"span\" name=\"email\" />\n\n                <InputPasswordWraper>\n                  <Input\n                    type={inputType ? 'password' : 'text'}\n                    name=\"password\"\n                    placeholder=\"Password\"\n                  />\n                  <IconWraper>\n                    {showPassword ? (\n                      <ShowIcon onClick={onShowPassword} />\n                    ) : (\n                      <HideIcon onClick={onShowPassword} />\n                    )}\n                  </IconWraper>\n                </InputPasswordWraper>\n                <ErrorMessage component=\"span\" name=\"password\" />\n\n                <InputPasswordWraper>\n                  <Input\n                    type={inputConfirmeType ? 'password' : 'text'}\n                    name=\"confirmPassword\"\n                    placeholder=\"Confirm Password\"\n                  />\n\n                  <IconWraper>\n                    {showConfirmePassword ? (\n                      <ShowIcon onClick={onShowConfirmePassword} />\n                    ) : (\n                      <HideIcon onClick={onShowConfirmePassword} />\n                    )}\n                  </IconWraper>\n                </InputPasswordWraper>\n                <ErrorMessage component=\"span\" name=\"confirmPassword\" />\n\n                <NextButtonWraper>\n                  <Button\n                    style={StyledNextButton}\n                    onClick={handleNextClick}\n                    children=\"Next\"\n                  />\n                </NextButtonWraper>\n\n                <LinkWraper>\n                  <LinkText>Already have an account?</LinkText>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </LinkWraper>\n              </>\n            ) : (\n              <>\n                <Input type=\"text\" name=\"name\" placeholder=\"Name\" />\n                <ErrorMessage component=\"span\" name=\"name\" />\n                <Input type=\"text\" name=\"city\" placeholder=\"City, region\" />\n                <ErrorMessage component=\"span\" name=\"city\" />\n                <Input\n                  type=\"number\"\n                  name=\"mobilePhone\"\n                  placeholder=\"Mobile phone\"\n                />\n                <ErrorMessage component=\"span\" name=\"mobilePhone\" />\n                <ButtonWraper>\n                  <Button\n                    style={StyledButton}\n                    type=\"submit\"\n                    children=\"Register\"\n                    onClick={onRegister}\n                  />\n                  <Button\n                    style={StyledButton}\n                    onClick={handleBackClick}\n                    children=\"Back\"\n                  />\n                </ButtonWraper>\n                <LinkWraper>\n                  <LinkText>Already have an account?</LinkText>\n                  <NavLink to=\"/login\">Login</NavLink>\n                </LinkWraper>\n                {sendEmail && <Navigate to=\"/confirm-email\" />}\n              </>\n            )}\n          </Form>\n        </Formik>\n      </Wraper>\n    </>\n  );\n};\n","import { RegistrationForm } from 'components/RegistrationForm/RegistrationForm';\n\nimport { Wraper, Container } from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <Wraper>\n      <Container>\n        <RegistrationForm />\n      </Container>\n    </Wraper>\n  );\n};\n\nexport default RegisterPage;\n","import styled from 'styled-components';\nimport bgMob from '../../assets/images/authBg/mobile.png';\nimport bgMobX from '../../assets/images/authBg/mobile-2x.png';\nimport bgTab from '../../assets/images/authBg/tablet.png';\nimport bgTabX from '../../assets/images/authBg/tablet-2x.png';\nimport bgDesc from '../../assets/images/authBg/desctop.png';\nimport bgDescX from '../../assets/images/authBg/desctop.png';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  position: relative;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Wraper = styled.div`\n  width: 100%;\n  height: 100vh;\n  background-image: url(${bgMob});\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-position-y: bottom;\n\n  @media only screen and (-webkit-min-device-pixel-ratio: 2),\n    only screen and (min--moz-device-pixel-ratio: 2),\n    only screen and (-moz-min-device-pixel-ratio: 2),\n    only screen and (-o-min-device-pixel-ratio: 2/1),\n    only screen and (min-device-pixel-ratio: 2),\n    only screen and (min-resolution: 192dpi),\n    only screen and (min-resolution: 2dppx) {\n    background-image: url(${bgMobX});\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: url(${bgTab});\n\n    @media only screen and (-webkit-min-device-pixel-ratio: 2),\n      only screen and (min--moz-device-pixel-ratio: 2),\n      only screen and (-moz-min-device-pixel-ratio: 2),\n      only screen and (-o-min-device-pixel-ratio: 2/1),\n      only screen and (min-device-pixel-ratio: 2),\n      only screen and (min-resolution: 192dpi),\n      only screen and (min-resolution: 2dppx) {\n      background-image: url(${bgTabX});\n    }\n  }\n\n  @media screen and (min-width: 1280px) {\n    background-image: url(${bgDesc});\n\n    @media only screen and (-webkit-min-device-pixel-ratio: 2),\n      only screen and (min--moz-device-pixel-ratio: 2),\n      only screen and (-moz-min-device-pixel-ratio: 2),\n      only screen and (-o-min-device-pixel-ratio: 2/1),\n      only screen and (min-device-pixel-ratio: 2),\n      only screen and (min-resolution: 192dpi),\n      only screen and (min-resolution: 2dppx) {\n      background-image: url(${bgDescX});\n    }\n  }\n`;\n"],"names":["Button","type","children","StyledButton","style","onClick","StyledTytle","styled","p","theme","fontWeight","bold","fontSizes","l","colors","regModalTitleColor","medium","ls","ModalTitle","yup","this","matches","schema","shape","email","mail","required","password","min","confirmPassword","label","oneOf","name","max","leters","city","mobilePhone","numeric","Wraper","transparent","regModBack","shadows","regModalShadow","radii","large","ButtonWraper","NextButtonWraper","LinkWraper","LinkText","xs","regModalLinkText","NavLink","Link","regModalLink","regModalActiveBtn","white","black","StyledNextButton","Form","FormicForm","Input","Field","regModalplaceholderColor","s","ErrorMessage","ErrorFormicError","error","space","ShowIcon","FaEye","HideIcon","FaEyeSlash","InputPasswordWraper","IconWraper","initialValues","RegistrationForm","dispatch","useDispatch","useState","onNext","setOnNext","showPassword","setShowPassword","showConfirmePassword","setShowConfirmePassword","inputType","setInputType","inputConfirmeType","setInputConfirmeType","sendEmail","setSendEmail","onShowPassword","prevState","onShowConfirmePassword","onSubmit","values","resetForm","console","log","phone","toString","authOperations","sendingEmail","hideForm","validationSchema","placeholder","component","to","Container","bgMob","bgMobX","bgTab","bgTabX","bgDesc","bgDescX"],"sourceRoot":""}