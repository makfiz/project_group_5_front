{"version":3,"file":"static/js/952.f8d5f252.chunk.js","mappings":"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","sources":["components/Button/Button.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","components/ModalTitle/ModalTitle.styled.js","components/ModalTitle/ModalTitle.js","components/LoginForm/LoginForm.styled.js","utils/loginValidationSchema.js","components/LoginForm/LoginForm.js","pages/LoginPage.jsx"],"sourcesContent":["export const Button = ({\n  type = 'button',\n  children,\n  style: StyledButton,\n  onClick,\n}) => {\n  return (\n    <StyledButton type={type} onClick={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${({ color = 'rgba(17, 17, 17, 0.6)' }) => color};\n  backdrop-filter: ${({ filter }) => (filter ? 'blur(0)' : 'blur(10px)')};\n`;\n\nexport const StyledModal = styled.div`\n  max-width: calc(100vw - 20px);\n  max-height: calc(100vh - 20px);\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport { Backdrop, StyledModal } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClick }) => {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  function handleKeyDown({ code }) {\n    if (code === 'Escape') {\n      onClick();\n    }\n  }\n\n  function handleBackDropClick({ target, currentTarget }) {\n    if (target === currentTarget) {\n      onClick();\n    }\n  }\n\n  return createPortal(\n    <Backdrop onClick={handleBackDropClick} color=\"transparen\" filter=\"true\">\n      <StyledModal>{children}</StyledModal>\n    </Backdrop>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import styled from 'styled-components';\n\nexport const StyledTytle = styled.p`\n  margin-bottom: 40px;\n\n  font-weight: ${p => p.theme.fontWeight.bold};\n  font-size: ${p => p.theme.fontSizes.l};\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.regModalTitleColor};\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    font-weight: ${p => p.theme.fontWeight.medium};\n    font-size: ${p => p.theme.fontSizes.ls};\n  }\n`;\n","import { StyledTytle } from './ModalTitle.styled';\n\nexport const ModalTitle = ({ children }) => {\n  return (\n    <>\n      <StyledTytle>{children}</StyledTytle>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport {\n  Form as FormicForm,\n  Field,\n  ErrorMessage as ErrorFormicError,\n} from 'formik';\nimport { FaEye } from 'react-icons/fa';\nimport { FaEyeSlash } from 'react-icons/fa';\n\nexport const Wraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  background-color: ${p => p.theme.colors.transparent};\n\n  @media screen and (min-width: 768px) {\n    width: 608px;\n    padding-top: 60px;\n    padding-bottom: 60px;\n\n    background-color: ${p => p.theme.colors.regModBack};\n    box-shadow: ${p => p.theme.shadows.regModalShadow};\n    border-radius: ${p => p.theme.radii.large};\n  }\n  @media screen and (min-width: 1280px) {\n    width: 618px;\n  }\n`;\n\nexport const ButtonWraper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 40px;\n  margin-top: 40px;\n`;\n\nexport const LinkWraper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const LinkText = styled.p`\n  margin-right: 6px;\n  font-family: 'Manrope';\n  font-size: ${p => p.theme.fontSizes.xs};\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.regModalLinkText};\n`;\n\nexport const NavLink = styled(Link)`\n  font-family: 'Manrope';\n  font-size: ${p => p.theme.fontSizes.xs};\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.regModalLink};\n`;\n\nexport const StyledButton = styled.button`\n  width: 280px;\n  height: 44px;\n\n  background-color: ${p => p.theme.colors.regModalActiveBtn};\n  color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.large};\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    width: 448px;\n  }\n  &:hover {\n    border: 2px solid #f59256;\n    background-color: transparent;\n    color: ${p => p.theme.colors.black};\n  }\n  &:active {\n    border: 2px solid #f59256;\n    background-color: transparent;\n    color: ${p => p.theme.colors.black};\n  }\n`;\n\nexport const Form = styled(FormicForm)`\n  display: flex;\n  flex-direction: column;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  background-color: ${p => p.theme.colors.transparent};\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: ${p => p.theme.radii.large};\n  padding-top: 11px;\n  padding-bottom: 11px;\n  padding-left: 14px;\n\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    background-color: #fdf7f2;\n    padding-left: 32px;\n    padding-top: 14px;\n    padding-bottom: 14px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 458px;\n  }\n\n  :not(:last-child) {\n    margin-bottom: 16px;\n  }\n  ::placeholder {\n    color: ${p => p.theme.colors.regModalplaceholderColor};\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n`;\n\nexport const ErrorMessage = styled(ErrorFormicError)`\n  color: ${p => p.theme.colors.error};\n  margin-bottom: ${p => p.theme.space[4]}px;\n  margin-left: ${p => p.theme.space[4]}px;\n  font-size: ${p => p.theme.fontSizes.s};\n\n  @media screen and (min-width: 768px) {\n    margin-left: ${p => p.theme.space[5]}px;\n  }\n`;\n\nexport const ShowIcon = styled(FaEye)`\n  color: ${p => p.theme.colors.regModalActiveBtn};\n  size: 2em;\n`;\n\nexport const HideIcon = styled(FaEyeSlash)``;\n\nexport const InputPasswordWraper = styled.div`\n  position: relative;\n`;\n\nexport const IconWraper = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 11px;\n\n  @media screen and (min-width: 768px) {\n    top: 14px;\n  }\n`;\n","import * as yup from 'yup';\n\nyup.addMethod(yup.string, 'numeric', function () {\n  return this.matches(/^\\d+$/, 'The number should have digits only');\n});\n\nyup.addMethod(yup.string, 'leters', function () {\n  return this.matches(/^[aA-zZ\\s]+$/, 'The email should have only alphabets');\n});\n\nyup.addMethod(yup.string, 'mail', function () {\n  return this.matches(\n    /^[a-z0-9!#$%&'+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'+/=?^_`{|}~-]+)@(?:[a-z0-9](?:[a-z0-9-][a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/,\n    'The email address is incorect'\n  );\n});\n\nexport const schema = yup.object().shape({\n  email: yup.string().mail().required('Please enter your email!'),\n  password: yup.string().min('7').required('Please enter your password!'),\n});\n","import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport { ModalTitle } from 'components/ModalTitle/ModalTitle';\nimport { Button } from 'components/Button/Button';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../redux/auth/operations';\n\nimport {\n  Wraper,\n  LinkText,\n  NavLink,\n  StyledButton,\n  Form,\n  Input,\n  ButtonWraper,\n  LinkWraper,\n  ErrorMessage,\n  ShowIcon,\n  HideIcon,\n  InputPasswordWraper,\n  IconWraper,\n} from './LoginForm.styled';\nimport { schema } from 'utils/loginValidationSchema';\n\nconst initialValues = { email: '', password: '' };\n\nexport const LoginForm = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [inputType, setInputType] = useState(true);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (values === '') {\n      return;\n    }\n\n\n    const { email, password } = values;\n    dispatch(authOperations.login({ email, password }));\n\n    console.log(values);\n    resetForm();\n  };\n\n  const onShowPassword = () => {\n    setShowPassword(prevState => !prevState);\n    setInputType(prevState => !prevState);\n  };\n\n  const onHandleClick = () => {\n    console.log('must redirect on another page');\n  };\n\n  return (\n    <>\n      <Wraper>\n        <ModalTitle children=\"Login\" />\n        <Formik\n          initialValues={initialValues}\n          onSubmit={handleSubmit}\n          validationSchema={schema}\n        >\n          <Form>\n            <Input type=\"email\" name=\"email\" placeholder=\"Email\" />\n            <ErrorMessage component=\"span\" name=\"email\" />\n\n            <InputPasswordWraper>\n              <Input\n                type={inputType ? 'password' : 'text'}\n                name=\"password\"\n                placeholder=\"Password\"\n              />\n              <IconWraper>\n                {showPassword ? (\n                  <ShowIcon onClick={onShowPassword} />\n                ) : (\n                  <HideIcon onClick={onShowPassword} />\n                )}\n              </IconWraper>\n            </InputPasswordWraper>\n            <ErrorMessage component=\"span\" name=\"password\" />\n\n            <ButtonWraper>\n              <Button\n                style={StyledButton}\n                type=\"submit\"\n                onClick={onHandleClick}\n                children=\"Login\"\n              />\n            </ButtonWraper>\n            <LinkWraper>\n              <LinkText>Don't have an account? </LinkText>\n              <NavLink to=\"/registration-redirect\">Register</NavLink>\n            </LinkWraper>\n          </Form>\n        </Formik>\n      </Wraper>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\n\nimport Modal from '../components/Modal/Modal';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    setIsModalOpen(true);\n  }, []);\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <>\n      {isModalOpen && (\n        <Modal onClick={closeModal}>\n          <>\n            <LoginForm />\n          </>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["Button","_ref","_ref$type","type","children","StyledButton","style","onClick","_jsx","Backdrop","styled","_templateObject","_taggedTemplateLiteral","_ref$color","color","_ref2","filter","StyledModal","_templateObject2","modalRoot","document","querySelector","handleKeyDown","code","useEffect","window","addEventListener","removeEventListener","createPortal","_ref3","target","currentTarget","StyledTytle","p","theme","fontWeight","bold","fontSizes","l","colors","regModalTitleColor","medium","ls","ModalTitle","_Fragment","Wraper","transparent","regModBack","shadows","regModalShadow","radii","large","ButtonWraper","LinkWraper","_templateObject3","LinkText","_templateObject4","xs","regModalLinkText","NavLink","Link","_templateObject5","regModalLink","_templateObject6","regModalActiveBtn","white","black","Form","FormicForm","_templateObject7","Input","Field","_templateObject8","regModalplaceholderColor","s","ErrorMessage","ErrorFormicError","_templateObject9","error","space","ShowIcon","FaEye","_templateObject10","HideIcon","FaEyeSlash","_templateObject11","InputPasswordWraper","_templateObject12","IconWraper","_templateObject13","yup","this","matches","schema","shape","email","mail","required","password","min","initialValues","LoginForm","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_useState3","_useState4","inputType","setInputType","dispatch","useDispatch","onShowPassword","prevState","_jsxs","Formik","onSubmit","values","resetForm","authOperations","console","log","validationSchema","name","placeholder","component","to","isModalOpen","setIsModalOpen","Modal"],"sourceRoot":""}